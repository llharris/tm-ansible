---
# tasks file for sf.add_drives
- name: List All Disks on Each Node
  uri:
    url: "{{ sf_api_url }}"
    method: POST
    user: "{{ sf_username }}"
    password: "{{ sf_password }}"
    force_basic_auth: yes
    #return_content: true
    body_format: json
    validate_certs: false
    body: "{{ lookup('template','all_drives.j2') }}"
    #  method: ListDrives
    #  params:
    #  id: 1
    status_code: 200
  register: all_drives

- name: List Drives
  debug:
    msg: "{{ all_drives }}"

#- name: Create drive list
#  template:
#    src: drives.j2
#    dest: /tmp/drives.j2

#- name: Add Drives
#  uri:
#    url: "{{ sf_api_url }}"
#    method: POST
#    user: "{{ sf_username }}"
#    password: "{{ sf_password }}"
#    force_basic_auth: yes
#    headers:
#      content-type: 'application/json'
#    body_format: json
#    validate_certs: false
    #body: "{{ lookup('template','drives.j2') | to_json }}"

#- name: List all Drive ID
#  debug:
#    msg: "{{ all_drives | json_query('json.result.drives[*].driveID') | sort }}"

#- debug:
#    msg: "A drive ID: {{ item }}"
#  with_items: "{{ all_drives | json_query('json.result.drives[*].driveID') }}"

#- name: Add all drives by ID
#  uri:
#    url: "{{ sf_api_url }}"
#    method: POST

#- name: Get Drive Hardware Info by ID
#  uri:
#    url: "{{ sf_api_url }}"
#    method: POST
#    user: "{{ sf_username }}"
#    password: "{{ sf_password }}"
#    force_basic_auth: yes
#    headers:
#      content-type: 'application/json'
#    body_format: json
#    validate_certs: false
#    body:
#      method: GetDriveHardwareInfo
#      params:
#        driveID: "{{ item }}"
#      id: 1
#  with_items: "{{ all_drives | json_query('json.result.drives[*].driveID') | sort }}"
#  with_items:
#    - 1
